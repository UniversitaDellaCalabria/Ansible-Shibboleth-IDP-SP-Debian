- name: Check debconf for mysql-server entries
  shell: (debconf-get-selections | grep -q -s mysql-server); echo $?
  register: debconf
  ignore_errors: yes

- name: Set debconf mysql root password
  debconf: name=mysql-server question="mysql-server/root_password" value="{{ idp_rdbms_pw }}" vtype="password"
  when: debconf.stdout == "1"

- name: Set debconf mysql root password again
  debconf: name=mysql-server question="mysql-server/root_password_again" value="{{ idp_rdbms_pw }}" vtype="password"
  when: debconf.stdout == "1"

- name: Install Mysql
  apt: name=mysql-server state=present

- name: stop mysqld_safe
  service: name=mysql state=stopped

- name: hard-stop mysql
  shell: "ps ax | grep mysql | awk -F' ' {'print $1'} | xargs echo | xargs kill -KILL;"
  ignore_errors: yes

- name: Enable root passwordless access (execute mysqld_safe)
  shell:
    cmd: |
        mkdir /var/run/mysqld/;
        chown mysql /var/run/mysqld/ -R;
        mysqld_safe --skip-grant-tables &


- name: Enable root passwordless access (change default root pwd)
  shell:
    cmd: |
        mysql -u root -p{{ idp_rdbms_pw }} <<EOF
        use mysql;
        update user set authentication_string=PASSWORD('{{ idp_rdbms_pw }}') where User='root';
        flush privileges;
        quit
        EOF

- name: Enable root passwordless access
  shell:
    cmd: |
        mysql -u root -p{{idp_rdbms_pw}} <<EOF
        ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
        flush privileges;
        quit
        EOF

- name: stop mysqld_safe
  service: name=mysql state=stopped


- name: Run Mysql
  service: name=mysql state=started enabled=yes

- name: upload sql datatabse
  template:
    src: roles/mysql/templates/shibboleth.sql
    dest: "{{ tmp_upload_dir }}/shibboleth.sql"

- name: Create Shibboleth Database
  shell: "mysql -u root < {{ tmp_upload_dir }}/shibboleth.sql"
  # shell: "mysql -u root --password={{ idp_rdbms_pw }} < {{ tmp_upload_dir }}/shibboleth.sql"

- name: Remove temporary SQL dump
  file: path="{{ tmp_upload_dir }}/shibboleth.sql" state=absent

- name: Check table RuoliOrganizzativi
  shell: "echo 'SELECT * FROM RuoliOrganizzativi' | mysql -u {{ idp_rdbms_user }} --password={{ idp_rdbms_pw }} {{ idp_rdbms_dbname }}"
  register: ruoli_org

- name: Copy temporary insert-ruoliorganizzativi.sql
  copy:
    src: roles/mysql/files/insert-ruoliorganizzativi.sql
    dest: "{{ tmp_upload_dir }}/insert-ruoliorganizzativi.sql"

- name: Load table RuoliOrganizzativi
  shell: "mysql -u root {{ idp_rdbms_dbname }} < {{ tmp_upload_dir }}/insert-ruoliorganizzativi.sql"
  # shell: "mysql -u root --password={{ idp_rdbms_pw }} {{ idp_rdbms_dbname }} < {{ tmp_upload_dir }}/insert-ruoliorganizzativi.sql"
  when: ruoli_org.stdout == ""

- name: Clean temporary insert-ruoliorganizzativi.sql
  file:
    state: absent
    path: "{{ tmp_upload_dir }}/insert-ruoliorganizzativi.sql"
